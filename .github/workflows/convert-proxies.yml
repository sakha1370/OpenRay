name: Convert Proxies

on:
  push:
    paths:
      - output/all_valid_proxies.txt
      - output_iran/all_valid_proxies_for_iran.txt
  workflow_dispatch:

permissions:
  contents: write

jobs:
  convert:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup Python for HTTP server
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Get the host IP for Docker networking
      - name: Get host IP
        run: |
          HOST_IP=$(ip route show default | awk '/default/ {print $3}')
          echo "HOST_IP=$HOST_IP" >> $GITHUB_ENV
          echo "Host IP: $HOST_IP"

      - name: Start temporary HTTP server for proxy files
        run: |
          # Start HTTP server on all interfaces
          cd ${{ github.workspace }}
          python3 -m http.server 8080 --bind 0.0.0.0 &
          HTTP_PID=$!
          echo "HTTP_PID=$HTTP_PID" >> $GITHUB_ENV
          
          # Wait for HTTP server to start
          sleep 3
          
          # Test if HTTP server is running
          curl -f http://localhost:8080/ || (echo "HTTP server failed to start" && exit 1)

      - name: Start subconverter service with proper networking
        run: |
          # Start subconverter with host network mode for better connectivity
          docker run -d --name subconverter \
            --network host \
            tindy2013/subconverter:latest
          
          # Wait for service to be ready
          sleep 10
          
          # Test if service is running
          curl -f http://localhost:25500/version || (echo "Subconverter service failed to start" && exit 1)

      # Debug network connectivity
      - name: Debug network connectivity
        run: |
          echo "=== Network Debug Info ==="
          echo "Host IP: $HOST_IP"
          echo "Testing localhost HTTP server..."
          curl -I http://localhost:8080/output/all_valid_proxies.txt || echo "Localhost test failed"
          
          echo "Testing with host IP..."
          curl -I http://$HOST_IP:8080/output/all_valid_proxies.txt || echo "Host IP test failed"
          
          echo "Checking proxy file exists..."
          ls -la output/all_valid_proxies.txt || echo "Proxy file not found"
          
          echo "File content preview:"
          head -n 5 output/all_valid_proxies.txt || echo "Cannot read proxy file"

      ##############################
      # Convert general proxies
      ##############################
      - name: Convert general proxies
        run: |
          mkdir -p ${{ github.workspace }}/output/converted
          
          # Use localhost since we're using host network mode
          PROXY_URL="http://localhost:8080/output/all_valid_proxies.txt"
          ENCODED_URL=$(python3 -c "import urllib.parse; print(urllib.parse.quote('$PROXY_URL', safe=''))")
          
          echo "Original URL: $PROXY_URL"
          echo "Encoded URL: $ENCODED_URL"
          
          # Test direct file access first
          echo "Testing direct proxy file access..."
          curl -f "$PROXY_URL" | head -n 3 || echo "Direct access failed"
          
          for type in clash meta quantumult quantumult-x surge surfboard loon ss v2ray sing-box; do
            echo "Converting to $type format..."
            
            API_URL="http://localhost:25500/sub?target=$type&url=$ENCODED_URL"
            echo "API URL: $API_URL"
            
            # Use subconverter API to convert proxies
            RESPONSE=$(curl -s -w "\n%{http_code}" \
              -H "User-Agent: ClashX/1.30.1" \
              --connect-timeout 30 \
              --max-time 120 \
              "$API_URL")
            
            HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
            CONTENT=$(echo "$RESPONSE" | sed '$d')
            
            echo "HTTP Code: $HTTP_CODE"
            
            if [ "$HTTP_CODE" = "200" ] && [ -n "$CONTENT" ]; then
              echo "$CONTENT" > "${{ github.workspace }}/output/converted/$type.txt"
              echo "Successfully converted to $type"
              echo "File size: $(wc -c < "${{ github.workspace }}/output/converted/$type.txt") bytes"
              echo "Content preview:"
              head -n 3 "${{ github.workspace }}/output/converted/$type.txt"
            else
              echo "Failed to convert to $type (HTTP: $HTTP_CODE)"
              echo "Error response:"
              echo "$CONTENT"
              # Create empty file if conversion failed
              touch "${{ github.workspace }}/output/converted/$type.txt"
            fi
            echo "---"
          done

      ##############################
      # Convert Iran proxies
      ##############################
      - name: Convert Iran proxies
        run: |
          mkdir -p ${{ github.workspace }}/output_iran/converted
          
          # Check if Iran proxy file exists
          if [ ! -f "output_iran/all_valid_proxies_for_iran.txt" ]; then
            echo "Iran proxy file not found, skipping..."
            # Create empty files for all formats
            for type in clash meta quantumult quantumult-x surge surfboard loon ss v2ray sing-box; do
              touch "${{ github.workspace }}/output_iran/converted/$type.txt"
            done
            exit 0
          fi
          
          # Use localhost since we're using host network mode
          PROXY_URL="http://localhost:8080/output_iran/all_valid_proxies_for_iran.txt"
          ENCODED_URL=$(python3 -c "import urllib.parse; print(urllib.parse.quote('$PROXY_URL', safe=''))")
          
          echo "Original Iran URL: $PROXY_URL"
          echo "Encoded Iran URL: $ENCODED_URL"
          
          # Test direct file access first
          echo "Testing direct Iran proxy file access..."
          curl -f "$PROXY_URL" | head -n 3 || echo "Direct access failed"
          
          for type in clash meta quantumult quantumult-x surge surfboard loon ss v2ray sing-box; do
            echo "Converting Iran proxies to $type format..."
            
            API_URL="http://localhost:25500/sub?target=$type&url=$ENCODED_URL"
            echo "Iran API URL: $API_URL"
            
            # Use subconverter API to convert proxies
            RESPONSE=$(curl -s -w "\n%{http_code}" \
              -H "User-Agent: ClashX/1.30.1" \
              --connect-timeout 30 \
              --max-time 120 \
              "$API_URL")
            
            HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
            CONTENT=$(echo "$RESPONSE" | sed '$d')
            
            echo "HTTP Code: $HTTP_CODE"
            
            if [ "$HTTP_CODE" = "200" ] && [ -n "$CONTENT" ]; then
              echo "$CONTENT" > "${{ github.workspace }}/output_iran/converted/$type.txt"
              echo "Successfully converted Iran proxies to $type"
              echo "File size: $(wc -c < "${{ github.workspace }}/output_iran/converted/$type.txt") bytes"
              echo "Content preview:"
              head -n 3 "${{ github.workspace }}/output_iran/converted/$type.txt"
            else
              echo "Failed to convert Iran proxies to $type (HTTP: $HTTP_CODE)"
              echo "Error response:"
              echo "$CONTENT"
              # Create empty file if conversion failed
              touch "${{ github.workspace }}/output_iran/converted/$type.txt"
            fi
            echo "---"
          done

      - name: Stop services
        if: always()
        run: |
          # Stop subconverter
          docker stop subconverter || true
          docker rm subconverter || true
          
          # Stop HTTP server
          if [ ! -z "$HTTP_PID" ]; then
            kill $HTTP_PID || true
          fi

      ##############################
      # Commit and push
      ##############################
      - name: Commit and push changes (force)
        run: |
          git add output/converted/ output_iran/converted/
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update converted proxy lists [skip ci]"
            git push --force https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/${{ github.repository }}.git main
          fi